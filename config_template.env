# ============================================================================
# 身份证OCR识别服务环境变量配置模板
# ============================================================================
# 
# 使用说明：
# 1. 复制此文件为 .env
# 2. 根据服务器性能选择合适的配置方案
# 3. 修改具体的配置值
# 4. 重启服务使配置生效
#
# 配置方案选择：
# 🚀 高性能服务器（16GB+内存，8核+CPU）- 使用方案A
# 💾 内存受限服务器（4-8GB内存，4核CPU）- 使用方案B  
# 🔧 生产环境推荐配置 - 使用方案C
# 🧪 开发/测试环境 - 使用方案D
#
# ============================================================================

# ----------------------------------------------------------------------------
# 🚀 方案A：高性能服务器配置（推荐：16GB+内存，8核+CPU）
# ----------------------------------------------------------------------------
# 适用场景：高并发生产环境，内存充足
# 预期性能：高并发处理，低延迟
# 内存需求：约12-16GB

# WORKERS=8                           # 8个工作进程，充分利用CPU
# OCR_PROCESS_POOL_SIZE=8             # 8个OCR进程，最大并发处理
# MAX_CONCURRENT_REQUESTS=16          # 16个并发请求
# MEMORY_OPTIMIZATION=False           # 关闭内存优化，追求性能
# ENABLE_GC_AFTER_REQUEST=False       # 关闭强制垃圾回收
# LOG_LEVEL=INFO                      # 详细日志便于监控
# LOG_ROTATION=50 MB                  # 大日志文件
# OCR_TASK_TIMEOUT=15                 # 短超时时间

# ----------------------------------------------------------------------------
# 💾 方案B：内存受限服务器配置（推荐：4-8GB内存，4核CPU）
# ----------------------------------------------------------------------------
# 适用场景：内存受限环境，注重稳定性
# 预期性能：中等并发，内存占用低
# 内存需求：约3-5GB

# WORKERS=2                           # 2个工作进程，降低内存占用
# OCR_PROCESS_POOL_SIZE=2             # 2个OCR进程，平衡性能和内存
# MAX_CONCURRENT_REQUESTS=4           # 4个并发请求，防止内存溢出
# MEMORY_OPTIMIZATION=True            # 启用内存优化
# ENABLE_GC_AFTER_REQUEST=True        # 启用强制垃圾回收
# LOG_LEVEL=WARNING                   # 减少日志输出
# LOG_ROTATION=20 MB                  # 小日志文件
# OCR_TASK_TIMEOUT=60                 # 长超时时间，适应慢速处理

# ----------------------------------------------------------------------------
# 🔧 方案C：生产环境推荐配置（推荐：8-16GB内存，4-8核CPU）
# ----------------------------------------------------------------------------
# 适用场景：生产环境，平衡性能和稳定性
# 预期性能：稳定高效，资源利用合理
# 内存需求：约6-10GB

WORKERS=4                             # 4个工作进程，平衡性能和资源
OCR_PROCESS_POOL_SIZE=4               # 4个OCR进程，适中的并发能力
MAX_CONCURRENT_REQUESTS=8             # 8个并发请求
MEMORY_OPTIMIZATION=True              # 启用内存优化，确保稳定性
ENABLE_GC_AFTER_REQUEST=True          # 启用垃圾回收，防止内存泄漏
LOG_LEVEL=WARNING                     # 生产环境日志级别
LOG_ROTATION=50 MB                    # 适中的日志文件大小
LOG_RETENTION=1 month                 # 保留1个月日志
OCR_TASK_TIMEOUT=30                   # 30秒超时，平衡用户体验
DEBUG=False                           # 关闭调试模式

# 生产环境安全配置（必须配置）
# API_KEYS=your-secret-key-1,your-secret-key-2,your-secret-key-3

# ----------------------------------------------------------------------------
# 🧪 方案D：开发/测试环境配置
# ----------------------------------------------------------------------------
# 适用场景：开发调试，功能测试
# 预期性能：便于调试，快速启动
# 内存需求：约2-4GB

# WORKERS=1                           # 单进程，便于调试
# OCR_PROCESS_POOL_SIZE=1             # 单OCR进程，最小资源占用
# MAX_CONCURRENT_REQUESTS=2           # 2个并发请求
# MEMORY_OPTIMIZATION=True            # 启用内存优化
# ENABLE_GC_AFTER_REQUEST=True        # 启用垃圾回收
# LOG_LEVEL=DEBUG                     # 详细调试日志
# LOG_ROTATION=10 MB                  # 小日志文件
# OCR_TASK_TIMEOUT=60                 # 长超时，便于调试
# DEBUG=True                          # 启用调试模式

# ============================================================================
# 🔧 其他可选配置
# ============================================================================

# 服务器网络配置
# HOST=0.0.0.0                       # 监听所有网卡（默认）
# PORT=8000                          # 服务端口（默认）

# 文件路径配置
# OCR_MODEL_DIR=/app/models           # OCR模型文件目录
# LOG_DIR=/app/logs                   # 日志文件目录
# LOG_FILENAME=sfzocr.log             # 日志文件名

# ============================================================================
# 📊 性能监控建议
# ============================================================================
#
# 1. 内存监控：
#    - 监控进程内存使用：ps aux | grep python
#    - 系统内存使用：free -h
#    - 推荐工具：htop, nvidia-smi（如使用GPU）
#
# 2. CPU监控：
#    - CPU使用率：top 或 htop
#    - 进程CPU占用：ps aux --sort=-%cpu
#
# 3. 日志监控：
#    - 实时查看日志：tail -f logs/sfzocr.log
#    - 错误日志统计：grep ERROR logs/sfzocr.log | wc -l
#
# 4. API监控：
#    - 响应时间监控
#    - 错误率统计
#    - 并发请求数监控
#
# ============================================================================
# 🚨 故障排除
# ============================================================================
#
# 常见问题解决：
#
# 1. 内存不足（OOM）：
#    - 减少 WORKERS 和 OCR_PROCESS_POOL_SIZE
#    - 启用 MEMORY_OPTIMIZATION=True
#    - 启用 ENABLE_GC_AFTER_REQUEST=True
#
# 2. 响应慢：
#    - 增加 OCR_PROCESS_POOL_SIZE（在内存允许范围内）
#    - 减少 OCR_TASK_TIMEOUT
#    - 关闭 MEMORY_OPTIMIZATION（如内存充足）
#
# 3. 高CPU占用：
#    - 减少 WORKERS
#    - 检查是否有死循环进程
#    - 优化 OCR_PROCESS_POOL_SIZE
#
# 4. 磁盘空间不足：
#    - 减少 LOG_ROTATION 大小
#    - 缩短 LOG_RETENTION 时间
#    - 清理旧日志文件
#
# ============================================================================ 